Algorithms:

Unstick
Undo a 'stick' operation
Can only be used while player status is 'sticky'

When a player tries to stick:
  if their status is not 'rolling' then no action is taken
  if the dice status is 'rolling' then no action is taken
  else 
  player status is changed from 'rolling' to 'sticky'
  the current roll value is shown in the current entry of their 'rolled' record
  their new total is calculated
  their new total is displayed
  a countdown timer is started for triggering changing their status to 'stuck'
  if no players are 'rolling' then the run is ended
If a player tries to unstick
  if their status is not 'sticky' then no action is taken
  else 
  the countdown timer is cancelled
  their status is changed from 'sticky' to 'rolling'
  the current entry of their 'rolled' record is erased
  their current total is recalculated
  this new total is displayed

When a run starts:
  all 'stuck' players have their status changed to 'rolling'
  the die (dice) is (are) rolled 

When a roll starts:
  the die-status is changed to 'rolling'
  the 'roll button' is disabled
  any 'sticky' players have their status changed to 'stuck'
  the associated countdown timers are cancelled

When a roll ends:
  the die-status is changed to 'showing'
  the 'roll button' is enabled
  if the value showing is not 1 then
    the value showing is added to the current 'rolled' total
    the current 'rolled' total is displayed
  else
    the current 'rolled' total is set to zero
    the current 'rolled' total is displayed
    the run is ended

When a run ends:
  all 'rolling' players have their status changed to 'stuck'
  the current roll is added to the 'rolled' record of players still 'rolling' 
  all 'rolling' player totals are replaced by the new totals
   



Hide player
Can not be used when in a run
When a saved list is used to populate the 'field' there may be a participant who is absent
This function allows the participant's name to be hidden - i.e. removed from the field

When Edit is selected
  All players - including 'scratched' players - are displayed on the scoreboard, formatted by status 'scratched' or 'stuck'
  An 'OK' button is shown
  
Any player's status can be flipped between 'scratched' and 'stuck'

When 'OK' is clicked
  Only the 'stuck' players are displayed on the scoreboard
  The 'OK' is hidden
  
  



Create/Store/Select a field of players
Different 'fields' of players (e.g. separate school classes) can be created, stored and then selected for a particular game.

Select field
List of fields available is shown
User selects one
Player names in that field are shown
User can scratch some
User then starts game

Player names are added in order to the scoreboard



Ranking
Assign a rank to each score
Create a linked list referencing the scores such that the first link points to the highest score, the next to the next highest, etc
Run through the list assigning a rank number to each score
Time complexity O(n^2)
Space complexity O(n)

// create sorted linked list
Set index to point to the first score.
Set head to point to the first score.
Set first score pointer/link to EndOfList
Repeat 
Set scoreIndex to point to the next score.
Set linkIndex to point to the first link.
If scoreToAdd > sortedScore then insert scoreToAdd before sortedScore
If EndOfList reached then insert scoreToAdd after sortedScore at end of list
Until score is inserted
// generate ranks
Set rankCount to 1
Set equalRank to False
Set index to point to the first score link.
Repeat
If equalRank is True then 
  if current score != next linked score then
    set equalRank to False
  endif
else (equalRank is False)
  if current score != next linked score or current score is EndOfList
    set rankValue to rankCount
  else
    set equalRank to True
    set rankValue to rankCount + '='
  endif
endif
set score rank to rankValue
Set index to point to the linked score link.
Increment rankCount
Until EndOfList reached
